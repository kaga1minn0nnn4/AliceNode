<launch>
    <!-- Load robot description and start state publisher-->
    <param name="robot_description" textfile="$(find cartgrapher_navigation)/urdf/robot_model.urdf" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- rplidar -->
    <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode">
        <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate"     type="int"    value="1000000"/>
        <param name="frame_id"            type="string" value="laser"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <param name="scan_frequency"      type="double"    value="10.0"/>
    </node>

    <!-- outdoor -->
    <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
        -configuration_directory
            $(find cartgrapher_navigation)/configuration_files
        -configuration_basename outdoor_2d.lua" output="screen">
    </node>

		<!-- Additional node which converts Cartographer map into ROS occupancy grid map. Not used and can be skipped in this case -->
    <!--<node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />-->
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.15" />

    <!-- move base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(find cartgrapher_navigation)/param/costmap_common_params.yaml" command="load" ns="global_costmap"/>
        <rosparam file="$(find cartgrapher_navigation)/param/costmap_common_params.yaml" command="load" ns="local_costmap"/>
        <rosparam file="$(find cartgrapher_navigation)/param/local_costmap_params.yaml" command="load"/>
        <rosparam file="$(find cartgrapher_navigation)/param/global_costmap_params.yaml" command="load"/>
        <!--<rosparam file="$(find cartgrapher_navigation)/param/base_local_planner_params.yaml" command="load"/>-->
        <rosparam file="$(find cartgrapher_navigation)/param/dwa_local_planner_params.yaml" command="load" />
        <rosparam file="$(find cartgrapher_navigation)/param/move_base_params.yaml" command="load"/>
    </node>

    <!-- Start RViz with custom view -->
    <node pkg="rviz" type="rviz" name="show_rviz" args="-d $(find cartgrapher_navigation)/rviz/navigation.rviz"/>

    <!-- realsense -->
    <arg name="serial_no"           default=""/>
    <arg name="usb_port_id"         default=""/>
    <arg name="device_type"         default=""/>
    <arg name="json_file_path"      default=""/>
    <arg name="camera"              default="camera"/>
    <arg name="tf_prefix"           default="$(arg camera)"/>
    <arg name="external_manager"    default="false"/>
    <arg name="manager"             default="realsense2_camera_manager"/>
    <arg name="output"              default="screen"/>
    <arg name="respawn"              default="false"/>

    <arg name="fisheye_width"       default="-1"/>
    <arg name="fisheye_height"      default="-1"/>
    <arg name="enable_fisheye"      default="false"/>

    <arg name="depth_width"         default="-1"/>
    <arg name="depth_height"        default="-1"/>
    <arg name="enable_depth"        default="true"/>

    <arg name="confidence_width"    default="-1"/>
    <arg name="confidence_height"   default="-1"/>
    <arg name="enable_confidence"   default="true"/>
    <arg name="confidence_fps"      default="-1"/>

    <arg name="infra_width"         default="848"/>
    <arg name="infra_height"        default="480"/>
    <arg name="enable_infra"        default="false"/>
    <arg name="enable_infra1"       default="false"/>
    <arg name="enable_infra2"       default="false"/>
    <arg name="infra_rgb"           default="false"/>

    <arg name="color_width"         default="-1"/>
    <arg name="color_height"        default="-1"/>
    <arg name="enable_color"        default="true"/>

    <arg name="fisheye_fps"         default="-1"/>
    <arg name="depth_fps"           default="-1"/>
    <arg name="infra_fps"           default="30"/>
    <arg name="color_fps"           default="-1"/>
    <arg name="gyro_fps"            default="-1"/>
    <arg name="accel_fps"           default="-1"/>
    <arg name="enable_gyro"         default="false"/>
    <arg name="enable_accel"        default="false"/>

    <arg name="enable_pointcloud"         default="false"/>
    <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>
    <arg name="pointcloud_texture_index"  default="0"/>
    <arg name="allow_no_texture_points"   default="false"/>
    <arg name="ordered_pc"                default="false"/>

    <arg name="enable_sync"               default="false"/>
    <arg name="align_depth"               default="false"/>

    <arg name="publish_tf"                default="true"/>
    <arg name="tf_publish_rate"           default="0"/>

    <arg name="filters"                   default=""/>
    <arg name="clip_distance"             default="-2"/>
    <arg name="linear_accel_cov"          default="0.01"/>
    <arg name="initial_reset"             default="false"/>
    <arg name="reconnect_timeout"         default="6.0"/>
    <arg name="wait_for_device_timeout"   default="-1.0"/>
    <arg name="unite_imu_method"          default=""/>
    <arg name="topic_odom_in"             default="odom_in"/>
    <arg name="calib_odom_file"           default=""/>
    <arg name="publish_odom_tf"           default="true"/>

    <arg name="stereo_module/exposure/1"  default="7500"/>
    <arg name="stereo_module/gain/1"      default="16"/>
    <arg name="stereo_module/exposure/2"  default="1"/>
    <arg name="stereo_module/gain/2"      default="16"/>



    <group ns="$(arg camera)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
        <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
        <arg name="external_manager"         value="$(arg external_manager)"/>
        <arg name="manager"                  value="$(arg manager)"/>
        <arg name="output"                   value="$(arg output)"/>
        <arg name="respawn"                  value="$(arg respawn)"/>
        <arg name="serial_no"                value="$(arg serial_no)"/>
        <arg name="usb_port_id"              value="$(arg usb_port_id)"/>
        <arg name="device_type"              value="$(arg device_type)"/>
        <arg name="json_file_path"           value="$(arg json_file_path)"/>

        <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
        <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)"/>
        <arg name="pointcloud_texture_index"  value="$(arg pointcloud_texture_index)"/>
        <arg name="enable_sync"              value="$(arg enable_sync)"/>
        <arg name="align_depth"              value="$(arg align_depth)"/>

        <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
        <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
        <arg name="enable_fisheye"           value="$(arg enable_fisheye)"/>

        <arg name="depth_width"              value="$(arg depth_width)"/>
        <arg name="depth_height"             value="$(arg depth_height)"/>
        <arg name="enable_depth"             value="$(arg enable_depth)"/>

        <arg name="confidence_width"         value="$(arg confidence_width)"/>
        <arg name="confidence_height"        value="$(arg confidence_height)"/>
        <arg name="enable_confidence"        value="$(arg enable_confidence)"/>
        <arg name="confidence_fps"           value="$(arg confidence_fps)"/>

        <arg name="color_width"              value="$(arg color_width)"/>
        <arg name="color_height"             value="$(arg color_height)"/>
        <arg name="enable_color"             value="$(arg enable_color)"/>

        <arg name="infra_width"              value="$(arg infra_width)"/>
        <arg name="infra_height"             value="$(arg infra_height)"/>
        <arg name="enable_infra"             value="$(arg enable_infra)"/>
        <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
        <arg name="enable_infra2"            value="$(arg enable_infra2)"/>
        <arg name="infra_rgb"                value="$(arg infra_rgb)"/>

        <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
        <arg name="depth_fps"                value="$(arg depth_fps)"/>
        <arg name="infra_fps"                value="$(arg infra_fps)"/>
        <arg name="color_fps"                value="$(arg color_fps)"/>
        <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
        <arg name="accel_fps"                value="$(arg accel_fps)"/>
        <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
        <arg name="enable_accel"             value="$(arg enable_accel)"/>

        <arg name="publish_tf"               value="$(arg publish_tf)"/>
        <arg name="tf_publish_rate"          value="$(arg tf_publish_rate)"/>

        <arg name="filters"                  value="$(arg filters)"/>
        <arg name="clip_distance"            value="$(arg clip_distance)"/>
        <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
        <arg name="initial_reset"            value="$(arg initial_reset)"/>
        <arg name="reconnect_timeout"        value="$(arg reconnect_timeout)"/>
        <arg name="wait_for_device_timeout"  value="$(arg wait_for_device_timeout)"/>
        <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>
        <arg name="topic_odom_in"            value="$(arg topic_odom_in)"/>
        <arg name="calib_odom_file"          value="$(arg calib_odom_file)"/>
        <arg name="publish_odom_tf"          value="$(arg publish_odom_tf)"/>
        <arg name="stereo_module/exposure/1" value="$(arg stereo_module/exposure/1)"/>
        <arg name="stereo_module/gain/1"     value="$(arg stereo_module/gain/1)"/>
        <arg name="stereo_module/exposure/2" value="$(arg stereo_module/exposure/2)"/>
        <arg name="stereo_module/gain/2"     value="$(arg stereo_module/gain/2)"/>

        <arg name="allow_no_texture_points"  value="$(arg allow_no_texture_points)"/>
        <arg name="ordered_pc"               value="$(arg ordered_pc)"/>

        </include>
    </group>

    <!-- rosserial -->
    <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
        <param name="port" value="/dev/ttyUSB1" />
        <param name="baud" value="115200" />
    </node>

    <!-- wait for move_base starting -->
    <arg name="mainnode_start_delay" default="5.0"/>

    <!-- convert_twistmsg -->
    <node name="convert_twistmsg"   pkg="convert_twistmsg" type="convert_twistmsg"/>

    <!-- map_server(pre-maked map publish) -->
    <node name="map_server" pkg="map_server" type="map_server" args="/home/tenshi/catkin_ws/src/AliceNode/map/map_target.yaml" >
        <remap from="map" to="premaked_map"/>
    </node>

    <!-- detect object -->
    <node pkg="detect_object" name="detect_object" type="detect_object.py">
        <remap from="object_detection_result" to="result"/>
    </node>

    <!-- maincore -->
    <node name="alicenode" pkg="alicenode" type="alicenode" output="screen" launch-prefix="bash -c 'sleep $(arg mainnode_start_delay); $0 $@' "/>
</launch>
